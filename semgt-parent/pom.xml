<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.semgt</groupId>
	<artifactId>semgt-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>semgt-parent</name>
	<modules>
		<module>../semgt-base</module>
		<module>../semgt-persist</module>
		<module>../semgt-service</module>
		<module>../semgt-web</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.0.6.RELEASE</org.springframework.version>
		<!-- <spring.data.redis.version>1.7.2.RELEASE</spring.data.redis.version> -->
		<spring.data.redis.version>1.1.0.RELEASE</spring.data.redis.version>
		<!-- <jedis.version>2.8.1</jedis.version> -->
		<jedis.version>2.1.0</jedis.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.1</version>
			</dependency>

			<!-- Spring jar -->
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Expression Language (depends on spring-core) Define this if you use 
				Spring Expression APIs (org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
				this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
				spring-beans) Define this if you use Spring AOP APIs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Application Context (depends on spring-core, spring-expression, spring- 
				spring-beans) This is the central artifact for Spring's Dependency Injec 
				Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
				<!-- <type>pom.tmp.sha1.tmp</type> -->
			</dependency>

			<!-- Various Application Context utilities, including EhCache, JavaMail, 
				Quartz, and Freemarker integration Define this if you need any of these -->
			<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context-support</artifactId> 
				<version>${org.springframework.version}</version> </dependency> -->
			<!-- Transaction Management Abstraction (depends on spring-core, spring-bean 
				spring-aop, spring-context) Define this if you use Spring Transactions o 
				DAO Exception Hierarchy (org.springframework.transaction.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring- 
				spring-tx) Define this if you use Spring's JdbcTemplate API -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on spring-core, spring-beans, spring-context, sprin 
				Define this if you need ORM (org.springframework.orm.*) -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework</groupId> -->
			<!-- <artifactId>spring-orm</artifactId> -->
			<!-- <version>${org.springframework.version}</version> -->
			<!-- </dependency> -->

			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
				JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-be 
				spring-context) Define this if you need OXM -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework</groupId> -->
			<!-- <artifactId>spring-oxm</artifactId> -->
			<!-- <version>${org.springframework.version}</version> -->
			<!-- </dependency> -->

			<!-- Web application development utilities applicable to both Servlet 
				and Portlet Environments (depends on spring-core, spring-beans, spring-conte 
				Define this if you use Spring MVC, or wish to use Struts, JSF, or anothe 
				web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-bea 
				spring-context, spring-web) Define this if you use Spring MVC with a Ser 
				Container such as Apache Tomcat -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-bea 
				spring-context, spring-web) Define this if you use Spring MVC with a Por 
				Container (org.springframework.web.portlet.*) -->
			<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc-portlet</artifactId> 
				<version>${org.springframework.version}</version> </dependency> -->
			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.2</version>
			</dependency>


			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>

			<!-- Mybatis and Spring jar, from mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.2</version>
			</dependency>

			<!-- Mybatis develop jar -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.1.1</version>
			</dependency>

			<!-- mysql database driver -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.37</version>
			</dependency>

			<!--commons-dbcp and commons-pool , Configure Data Source -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>

			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.5.6</version>
			</dependency>

			<!-- Logging depend on the jar, like log4j,json-lib... -->
			<!-- <dependency> -->
			<!-- <groupId>commons-logging</groupId> -->
			<!-- <artifactId>commons-logging-api</artifactId> -->
			<!-- <version>1.1</version> -->
			<!-- </dependency> -->

			<!-- log log4g -->
			<!-- <dependency> -->
			<!-- <groupId>log4j</groupId> -->
			<!-- <artifactId>log4j</artifactId> -->
			<!-- <version>1.2.17</version> -->
			<!-- </dependency> -->

			<!-- logback+slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>1.6.1</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>0.9.27</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>0.9.27</version>
			</dependency>

			<!-- config redis data and client jar -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>${spring.data.redis.version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
