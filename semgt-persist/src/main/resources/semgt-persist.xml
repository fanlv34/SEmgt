<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- 引入配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 先引用jdbc.properties文件，待用 -->
		<property name="locations">
			<list>
				<value>classpath:props/jdbc-common.properties</value>
				<!-- prd -->
				<value>classpath:props/jdbc-prd.properties</value>
				<value>classpath:props/redisConfig-prd.properties</value>
				<!-- local -->
<!-- 				<value>classpath:props/jdbc-local.properties</value> -->
<!-- 				<value>classpath:props/redisConfig-local.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- 配置数据库 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!-- data source configuration -->
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
		<!-- 是否对空闲连接进行校验，如果检测失败, 则连接将被从池中去除.
			注意: 设置为true 后如果要生效,validationQuery 参数必须设置为非空字符串 -->
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"></property>
		<!-- 用来验证从连接池取出的连接 -->
		<property name="validationQuery" value="${jdbc.validationQuery}"></property>
		<!-- 校验查询超时时间以秒为单位 -->
		<property name="validationQueryTimeout" value="${jdbc.validationQueryTimeout}" />
		<!-- 避免过度验证，保证验证不超过这个频率——以毫秒为单位 -->
		<property name="validationInterval" value="${jdbc.validationInterval}" />
		<!-- 空闲连接回收器执行间隔，单位毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 空闲连接能够保持空闲的最小时间，单位毫秒，在这个区间不会被回收器回收 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<!-- 空闲连接回收器的执行线程数 -->
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
		<!-- 检查连接是否泄漏（一般是因为没有关闭连接）,如果他们超过了 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!-- 连接多久没有释放则认为是泄漏线程 -->
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
	</bean>

	<!-- 指定sqlSessionFactory。官方描述：要创建工厂 bean,放置下面的代码在 Spring 的 XML 配置文件中 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/semgt/mapping/*.xml" />
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.semgt.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--事务模板 -->
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
		<!--ISOLATION_DEFAULT 表示由使用的数据库决定 -->
		<!-- <property name="isolationLevelName" value="ISOLATION_DEFAULT" /> -->
		<!-- <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" /> -->
		<!-- <property name="timeout" value="30"/> -->
	</bean>

	<!-- 引入同文件夹下的redis属性配置文件 -->
	<import resource="redis-context.xml" />
</beans>